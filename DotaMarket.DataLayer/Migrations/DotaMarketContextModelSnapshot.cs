// <auto-generated />
using System;
using DotaMarket.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotaMarket.DataLayer.Migrations
{
    [DbContext(typeof(DotaMarketContext))]
    partial class DotaMarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Hero")
                        .HasColumnType("int");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemSlot")
                        .HasColumnType("int");

                    b.Property<Guid?>("MarketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rare")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("ItemHistoryId");

                    b.HasIndex("MarketId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.ItemHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ItemAction")
                        .HasColumnType("int");

                    b.Property<Guid>("ToId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("ItemHistories");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.Market", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Market");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.MarketHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MarketHistories");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.Inventory", b =>
                {
                    b.HasOne("DotaMarket.DataLayer.Entities.User", "User")
                        .WithMany("Inventory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.Item", b =>
                {
                    b.HasOne("DotaMarket.DataLayer.Entities.Inventory", null)
                        .WithMany("Items")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotaMarket.DataLayer.Entities.ItemHistory", "ItemHistory")
                        .WithMany()
                        .HasForeignKey("ItemHistoryId");

                    b.HasOne("DotaMarket.DataLayer.Entities.Market", null)
                        .WithMany("Items")
                        .HasForeignKey("MarketId");

                    b.Navigation("ItemHistory");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.ItemHistory", b =>
                {
                    b.HasOne("DotaMarket.DataLayer.Entities.User", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DotaMarket.DataLayer.Entities.User", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.MarketHistory", b =>
                {
                    b.HasOne("DotaMarket.DataLayer.Entities.User", null)
                        .WithMany("ActionHistory")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.Inventory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.Market", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DotaMarket.DataLayer.Entities.User", b =>
                {
                    b.Navigation("ActionHistory");

                    b.Navigation("Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
